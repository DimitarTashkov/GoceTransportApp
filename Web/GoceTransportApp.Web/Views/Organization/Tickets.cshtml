@using System.Security.Claims
@using GoceTransportApp.Services.Data.Users
@using static GoceTransportApp.Common.GlobalConstants
@model GoceTransportApp.Web.ViewModels.Tickets.TicketsForOrganizationViewModel
@inject IUserService userService

@{
    var organizationId = Model.OrganizationId;
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var isFounder = await userService.HasUserCreatedOrganizationAsync(userId, organizationId);
    var isAdmin = User.IsInRole(AdministratorRoleName);
}

@{
    ViewData["Title"] = "Tickets for Organization";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong><i class="fas fa-ticket-alt me-2"></i> </strong> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["FailMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong><i class="fas fa-times-circle "></i> </strong> @TempData["FailMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container mt-5">
    <h1 class="text-center mb-4">Tickets</h1>
    @if (isFounder || isAdmin)
    {
        <div class="mt-4 mb-4">
            <a asp-action="Create" asp-controller="Ticket" asp-route-organizationId="@Model.OrganizationId" class="btn btn-success"><i class="fas fa-plus"></i> Add New Ticket</a>
        </div>
    }

    @if (!Model.Tickets.Any())
    {
        <p>No tickets found for this organization.</p>
    }

    <div class="row">
        @foreach (var ticket in Model.Tickets)
        {
            <partial name="_TicketCardPartial" model="ticket" />
        }
    </div>
</div>
