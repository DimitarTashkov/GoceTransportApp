@using GoceTransportApp.Services.Data.Users
@using System.Security.Claims
@using static GoceTransportApp.Common.GlobalConstants
@model GoceTransportApp.Web.ViewModels.Schedules.ScheduleDetailsViewModel
@inject IUserService userService
@{
    var organizationId = Model.OrganizationId;
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var isFounder = await userService.HasUserCreatedOrganizationAsync(userId, organizationId);
    var isAdmin = User.IsInRole(AdministratorRoleName);

    var returnUrl = Context.Request.Headers["Referer"].ToString();

    if (string.IsNullOrEmpty(returnUrl))
    {
        returnUrl = Url.Action("Index", "Route");
    }
}

<div class="card shadow-sm mx-auto" style="max-width: 600px;">
    <div class="card-body">
        <h5 class="card-title">
            <i class="fas fa-calendar-day text-primary"></i> @Model.Day
        </h5>
        <p class="card-text">
            <strong>Departing:</strong> @Model.Departing <br />
            <strong>Arriving:</strong> @Model.Arriving <br />
            <strong>From:</strong> @Model.FromCity (@Model.FromStreet) <br />
            <strong>To:</strong> @Model.ToCity (@Model.ToStreet) <br />
            <strong>Vehicle:</strong> @Model.VehicleNumber <br />
            <strong>Organization:</strong> @Model.OrganizationName
        </p>
        @if (isFounder || isAdmin)
        {
            <a asp-action="Edit" asp-controller="Schedule" asp-route-id="@Model.Id" asp-route-organizationId="@Model.OrganizationId" class="btn btn-warning">
                <i class="fas fa-edit"></i> Edit
            </a>
            <a asp-action="Delete" asp-controller="Schedule" asp-route-id="@Model.Id" asp-route-organizationId="@Model.OrganizationId" class="btn btn-danger">
                <i class="fas fa-trash-alt"></i> Delete
            </a>
        }
        <a href="@returnUrl" class="btn btn-light">Back to List</a>

    </div>
</div>
