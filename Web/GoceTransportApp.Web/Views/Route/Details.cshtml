@using GoceTransportApp.Services.Data.Users
@using System.Security.Claims
@using static GoceTransportApp.Common.GlobalConstants;
@model GoceTransportApp.Web.ViewModels.Routes.RouteDetailsViewModel
@inject IUserService userService
@{
    var organizationId = Model.OrganizationId;
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var isFounder = await userService.HasUserCreatedOrganizationAsync(userId, organizationId);
    var isAdmin = User.IsInRole(AdministratorRoleName);
}
@{
    ViewData["Title"] = "Route Details";
}

<h1 class="mb-4">Route Details</h1>

@if (TempData[nameof(GoceTransportApp.Common.ResultMessages.RouteMessages.InvalidRouteDetails)] != null)
{
    <div class="alert alert-danger">
        @TempData[nameof(GoceTransportApp.Common.ResultMessages.RouteMessages.InvalidRouteDetails)]
    </div>
}

<partial name="_RouteDetailsPartial" model="Model" />

<div class="mt-4">
    @if (isFounder || isAdmin)
    {
        <a asp-action="Edit" asp-controller="Route" asp-route-id="@Model.Id" asp-route-organizationId="@Model.OrganizationId" class="btn btn-warning">Edit</a>
        <a asp-action="Delete" asp-controller="Route" asp-route-id="@Model.Id" asp-route-organizationId="@Model.OrganizationId" class="btn btn-danger">Delete</a>
        <a asp-action="Archive" asp-controller="Route" asp-route-id="@Model.Id" asp-route-organizationId="@Model.OrganizationId" class="btn btn-secondary">Archive</a>
    }
    <a asp-action="Routes" asp-controller="Organization" asp-route-organizationId="@Model.OrganizationId" class="btn btn-light">Back to List</a>
</div>
