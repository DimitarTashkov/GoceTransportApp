@using GoceTransportApp.Services.Data.Users
@using System.Security.Claims
@using static GoceTransportApp.Common.GlobalConstants;
@model GoceTransportApp.Web.ViewModels.Routes.RouteDetailsViewModel
@inject IUserService userService
@{
    var organizationId = Model.OrganizationId;
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var isFounder = await userService.HasUserCreatedOrganizationAsync(userId, organizationId);
    var isAdmin = User.IsInRole(AdministratorRoleName);

}
@{
    ViewData["Title"] = "Route Details";

    var returnUrl = Context.Request.Headers["Referer"].ToString();

    if (string.IsNullOrEmpty(returnUrl))
    {
        returnUrl = Url.Action("Index", "Route");
    }
}

<h1 class="mb-4">Route Details</h1>

@if (TempData[nameof(GoceTransportApp.Common.ResultMessages.GeneralMessages.FailMessage)] != null)
{
    <div class="alert alert-danger">
        @TempData[nameof(GoceTransportApp.Common.ResultMessages.GeneralMessages.FailMessage)]
    </div>
}

<partial name="_RouteDetailsPartial" model="Model" />

<div class="mt-4">
    @if (isFounder || isAdmin)
    {
        <a asp-action="Edit" asp-controller="Route" asp-route-id="@Model.Id" asp-route-organizationId="@Model.OrganizationId" class="btn btn-warning">
            <i class="fas fa-edit"></i> Edit
        </a>
        <a asp-action="Delete" asp-controller="Route" asp-route-id="@Model.Id" asp-route-organizationId="@Model.OrganizationId" class="btn btn-danger">
            <i class="fas fa-trash-alt"></i> Delete
        </a>

    }
    <a href="@returnUrl" class="btn btn-light">
        <i class="fas fa-arrow-left"></i> Back to List
    </a>
</div>
